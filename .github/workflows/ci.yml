name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  COVERAGE_FAIL_UNDER: 70

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Prepare report directory
        run: |
          # Ensure REPORT_DIR exists early so upload-artifact can find it even if the job is canceled
          REPORT_DIR=tests/auto-test-reports/test-reports_$(date -u +"%Y-%m-%dT%H-%M-%SZ")
          mkdir -p "$REPORT_DIR/reports"
          # expose to later steps
          echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV
          # write a marker so upload can at least pick up something if tests are canceled
          echo "marker" > "$REPORT_DIR/UPLOAD_MARKER.txt"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov

      - name: Run tests (pytest + coverage)
        run: |
          # Put CI test artifacts under tests/auto-test-reports in a timestamped folder
          REPORT_DIR=tests/auto-test-reports/test-reports_$(date -u +"%Y-%m-%dT%H-%M-%SZ")
          mkdir -p "$REPORT_DIR/reports"
          # make REPORT_DIR available to later steps in this job
          echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV
          # Run pytest via python -m pytest to match local invocation and ensure venv semantics.
          python -m pytest --maxfail=1 --disable-warnings -q --cov=./ \
            --cov-report=term-missing \
            --cov-report=xml:"$REPORT_DIR/coverage.xml" \
            --cov-report=html:"$REPORT_DIR/htmlcov" \
            --cov-fail-under=${{ env.COVERAGE_FAIL_UNDER }} \
            --junitxml="$REPORT_DIR/reports/junit.xml"
          echo "$REPORT_DIR" > "$REPORT_DIR"/last_report_dir.txt
        continue-on-error: false

      - name: Debug list artifact dir
        if: always()
        run: |
          # REPORT_DIR is written to $GITHUB_ENV by the Prepare report directory step
          echo "REPORT_DIR=$REPORT_DIR"
          ls -la "$REPORT_DIR" || true

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: $REPORT_DIR
